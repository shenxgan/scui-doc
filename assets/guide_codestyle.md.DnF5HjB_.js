import{_ as e,c as a,o as t,a3 as i}from"./chunks/framework.CjiOseYb.js";const m=JSON.parse('{"title":"代码风格指南","description":"","frontmatter":{},"headers":[],"relativePath":"guide/codestyle.md","filePath":"guide/codestyle.md","lastUpdated":1718880150000}'),o={name:"guide/codestyle.md"},s=i('<h1 id="代码风格指南" tabindex="-1">代码风格指南 <a class="header-anchor" href="#代码风格指南" aria-label="Permalink to &quot;代码风格指南&quot;">​</a></h1><p>在真正开始编写项目前建议先阅读一遍指南，这对团队联合开发的代码规范和统一有很大帮助。当其中不规范的部分eslint也会提醒报错，比如定义了变量未使用等。</p><p>当然还有一些规范 eslint 并不能效验，还是需要自己注意，本文主要以文件名规则展开。</p><h2 id="视图" tabindex="-1">视图 <a class="header-anchor" href="#视图" aria-label="Permalink to &quot;视图&quot;">​</a></h2><p>所有视图文件都应该在 views 文件下下，并且都使用各自的文件夹分开。如有多个单词名组合建议.vue文件都使用横线链接。</p><p>栗子</p><ul><li>@/views/user/index.vue</li><li>@/views/user-ent/index.vue</li></ul><h2 id="js文件" tabindex="-1">JS文件 <a class="header-anchor" href="#js文件" aria-label="Permalink to &quot;JS文件&quot;">​</a></h2><p>所有.js文件也建议遵循横线链接</p><p>栗子</p><ul><li>@/utils/permission.js</li><li>@/utils/user-flag.js</li></ul><h2 id="组件component" tabindex="-1">组件Component <a class="header-anchor" href="#组件component" aria-label="Permalink to &quot;组件Component&quot;">​</a></h2><p>关于组件的命名方式，虽然VUE官方推荐大写开头。但本项目还是喜欢以小写开头的小驼峰，就是任性！。建议使用文件夹分开。</p><p>栗子</p><ul><li>@/components/scEcharts/index.vue</li><li>@/components/scUpload/index.vue</li></ul>',15),l=[s];function n(r,d,c,p,u,h){return t(),a("div",null,l)}const f=e(o,[["render",n]]);export{m as __pageData,f as default};
